plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
    maven { url 'https://maven.tomalbrc.de' }
    maven { url 'https://maven.nucleoid.xyz' }
    mavenLocal()
}

loom {
    accessWidenerPath = file('src/main/resources/spiderstpo.aw')
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Polymer
    modImplementation ("eu.pb4:polymer-core:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-blocks:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack-extras:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-networking:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-autohost:${project.polymer_version}")

    // BIL
    modImplementation include("de.tomalbrc:blockbench-import-library:${project.bil_version}")

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
